{"version":3,"file":"static/js/768.3c064f66.chunk.js","mappings":"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","sources":["components/Form/IForm.jsx","views/LoginView.jsx"],"sourcesContent":["import { Box, Button, TextField, Typography} from '@mui/material';\nimport { useState} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login, register } from 'redux/auth/authOperations';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nexport const IForm = ({buttonText, backgroundColor}) => {\nconst dispatch = useDispatch();\n\nconst [name, setName] = useState('');\nconst [email, setEmail] = useState('');\nconst [password, setPassword] = useState('');\nconst [number, setNumber] = useState(\"\");\nconst params = {};\n\nconst fieldsCreator = (value) => {\n    switch (value) {\n\n    case \"Login\":\n    params.fields = {email, password}\n    params.action = (valueField) => login(valueField)\n    params.reset = () => { setEmail(''); setPassword('');}\n    return params;\n\n    case \"Registration\":\n    params.fields = {name, email, password}\n    params.action = (valueField) => register(valueField)\n    params.reset = () => {\n        setName(''); \n        setEmail(''); \n        setPassword('');}\n    return params;\n\n    case \"Add contact\":\n        params.fields = {name, number}\n        params.action = (valueField) => addContact(valueField)\n        params.reset = () => {\n            setName(''); \n            setNumber('');}\n    return params;\n\n    \n    default:\n        return;\n    }\n\n}\n\nfieldsCreator(buttonText)\n\nconst {fields, action, reset} = params;\n\nconsole.log(backgroundColor)\n\n\n\nconst handleChange = event => {\n  const { name, value } = event.target;\n  switch (name) {\n    case 'name':\n        return setName(value);\n    case 'email':\n      return setEmail(value);\n    case 'password':\n      return setPassword(value);\n    case \"number\":\n        return setNumber(value);\n   \n    default:\n      return;\n  }\n};\n\nconst handleSubmit = event => {\n  event.preventDefault();\n  dispatch(action(fields));\nreset()\n};\n\n    return (<Box component=\"form\" onSubmit={handleSubmit} sx={{gap: \"20px\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", width: \"50%\",}}>\n      {Object.keys(fields).map(field => {\n           return <label key= {field}>\n           <TextField\n             type=\"text\"\n             name={field}\n             value = {fields[field]}\n             onChange={handleChange}\n             variant=\"outlined\"\n             label={field}\n             id=\"outlined-password-input\"\n           />\n         </label> \n        })}\n\n        <Button variant=\"contained\" type=\"submit\">\n          <Typography>{buttonText}</Typography>\n        </Button>\n      </Box>)\n}","import { useSelector } from 'react-redux';\nimport { loggedInSelector } from 'redux/auth/authSelectors';\nimport { Box, Typography, Container } from '@mui/material';\nimport { IForm } from 'components/Form/IForm';\n\nconst LoginView = () => {\n  const isLoggedIn = useSelector(loggedInSelector);\n  if (isLoggedIn) return null;\n\n  return (\n    <Container\n      sx={{\n        height: '92vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        p: 2,\n        gap: '20px',\n      }}\n    >\n      <Box\n      component=\"div\"\n        sx={{\n          width: '30%',\n          height: '70%',\n          textAlign: 'center',\n          backgroundColor: '#ffffff',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          p: 2,\n          gap: '20px',\n          borderRadius: \"4px\",\n        }}\n      >\n        <Typography variant=\"h4\" >\n          Login page\n        </Typography>\n\n        <IForm buttonText={'Login'} />\n      </Box>\n    </Container>\n  );\n};\n\nexport default LoginView;\n"],"names":["IForm","buttonText","backgroundColor","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","number","setNumber","params","value","fields","action","valueField","login","reset","register","addContact","fieldsCreator","console","log","handleChange","event","target","component","onSubmit","preventDefault","sx","gap","display","flexDirection","alignItems","justifyContent","width","Object","keys","map","field","type","onChange","variant","label","id","useSelector","loggedInSelector","height","p","textAlign","borderRadius"],"sourceRoot":""}